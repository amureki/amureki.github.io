<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>amureki</title>
    <link>https://amureki.me/</link>
    <description>Recent content on amureki</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://amureki.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Heroku CLI aliases</title>
      <link>https://amureki.me/posts/2019-03-15-heroku-aliases/</link>
      <pubDate>Sun, 17 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://amureki.me/posts/2019-03-15-heroku-aliases/</guid>
      <description>Heroku CLI aliases Heroku has nice and powerful CLI, which I am using quite heavily for company and personal stuff almost every day.
Very often I need to login to one of my apps or to the addons, but default commands are very verbose, so here are my shorter aliases:
# Heroku alias heroku-login=&amp;quot;heroku login&amp;quot; alias heroku-logs=&amp;quot;heroku logs -t&amp;quot; alias heroku-bash=&amp;quot;heroku run bash&amp;quot; ## Addons alias heroku-cloudamqp=&amp;quot;heroku addons:open cloudamqp&amp;quot; alias heroku-newrelic=&amp;quot;heroku addons:open newrelic&amp;quot; alias heroku-scheduler=&amp;quot;heroku addons:open scheduler&amp;quot; alias heroku-librato=&amp;quot;heroku addons:open librato&amp;quot; alias heroku-logentries=&amp;quot;heroku addons:open logentries&amp;quot; alias heroku-connect=&amp;quot;heroku addons:open herokuconnect&amp;quot; ## Django-related alias heroku-shell-plus=&amp;quot;heroku run python manage.</description>
    </item>
    
    <item>
      <title>Revoke third-party access</title>
      <link>https://amureki.me/posts/2017-08-10-revokeaccess-en/</link>
      <pubDate>Thu, 10 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://amureki.me/posts/2017-08-10-revokeaccess-en/</guid>
      <description>Revoke third-party access Somewhere in a Twitter, I found a couple of links to social networks settings and advice to check the list of third-party services, which have access to your account. I started going through my social accounts and cleaning there.
That was a horrible mess, sometimes I did not recognize what is this service is used for and why I gave it permissions.
So, I&amp;rsquo;ve just decided to keep a list of links to social accounts settings, so I can revisit it sometimes and clean up again.</description>
    </item>
    
    <item>
      <title>Podcasts</title>
      <link>https://amureki.me/posts/2016-10-29-podcasts-en/</link>
      <pubDate>Sat, 29 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://amureki.me/posts/2016-10-29-podcasts-en/</guid>
      <description>Podcasts Here is a list of podcast shows, I&amp;rsquo;m trying to listen to
 Zavtracast [ru]
An entertaining podcast about media and games. (iTunes)
 Radio-T [ru]
Popular russian IT podcast. Really old one, right from 2006. (iTunes)
 Hobby Talks Podcast [ru]
Entertaining podcast about books and games worlds, historical events and mysteries. (iTunes)
 Welcome to Night Vale [en]
An unusual radio show about weird and mysterious stories happening in a fictional town.</description>
    </item>
    
    <item>
      <title>How GitHub uses GitHub to develop and deploy GitHub</title>
      <link>https://amureki.me/posts/2016-10-21-how-github-uses-github-to-deploy-github-en/</link>
      <pubDate>Fri, 21 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://amureki.me/posts/2016-10-21-how-github-uses-github-to-deploy-github-en/</guid>
      <description>How GitHub uses GitHub to develop and deploy GitHub So, the talk was from Johannes Nicolai from Enterprise Solutions Engineering team. There were almost no marketing stuff, but about their inner structure and flow.
Сompany-wise they have around 600 people, half of them working remotely from everywhere, half of them SF-based. And they are operating the 51st popular website on the internet.
They are doing everything over Github, like literally everything.</description>
    </item>
    
    <item>
      <title>Количество строк кода в Django-проекте</title>
      <link>https://amureki.me/posts/2015-01-20-django-project-loc-ru/</link>
      <pubDate>Tue, 20 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://amureki.me/posts/2015-01-20-django-project-loc-ru/</guid>
      <description>Количество строк кода в Django-проекте Составил недавно небольшую команду для подсчета количества строчек полезного (более-менее) кода в своих Django-проектах.
git ls-files | grep .py | grep -vE &#39;(migrations|__init__|staticfiles|layout)&#39; | xargs cat | grep -v ^\s*$ | wc -l  Коротко про команду: берем все гитовые файлы с расширением .py, исключаем файлы с ключами migrations, __init__, staticfiles, layout в названии, после чего уже внутри самих файлов считаем все не пустые строчки.</description>
    </item>
    
    <item>
      <title>Регистрация при восстановлении пароля</title>
      <link>https://amureki.me/posts/2015-01-17-signup-on-password-recovery-ru/</link>
      <pubDate>Sat, 17 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://amureki.me/posts/2015-01-17-signup-on-password-recovery-ru/</guid>
      <description>Регистрация при восстановлении пароля На одном из сервисов недавно возникла ситуация: в поддержку пришло письмо, с жалобой пользователя, которому не приходит письмо для восстановления пароля.
После короткой проверки выяснил, что такого пользователя просто нет в системе.
И в голову пришла мысль, а почему бы не регистрировать пользователей, которые по какой-либо причине считают что уже имеют аккаунт на сайте? Их цель - получить свой пароль и зайти на сервис, так давайте позволим им это.</description>
    </item>
    
    <item>
      <title>My OSS contributions | amureki.me</title>
      <link>https://amureki.me/contributions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://amureki.me/contributions/</guid>
      <description>My OSS contributions This is not a full list, but contributions that I could find/remember and are more or less notable.
 https://github.com/django/django https://github.com/django/djangoproject.com https://github.com/berinhard/model_mommy https://github.com/romgar/django-dirtyfields https://github.com/etianen/django-reversion https://github.com/etianen/django-watson https://github.com/jedie/django-reversion-compare https://github.com/DjangoGirls/djangogirls https://github.com/dateutil/dateutil https://github.com/LambdaLint https://github.com/Thermondo https://github.com/django-ru https://github.com/flashcode/msgcheck https://github.com/pennersr/django-allauth  Back to CV</description>
    </item>
    
    <item>
      <title>My presence on the internet | amureki.me</title>
      <link>https://amureki.me/links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://amureki.me/links/</guid>
      <description> My presence on the internet  email linkedin github stackoverflow stackshare twitter instagram website  </description>
    </item>
    
    <item>
      <title>Rustem Saiargaliev, Software Engineer</title>
      <link>https://amureki.me/cv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://amureki.me/cv/</guid>
      <description>Rustem Saiargaliev, Software Engineer Berlin, Germany (born in Ufa, Russia)
Skill set  Python — Django, Flask, Celery, pytest Javascript — jQuery, React, Vue Databases — PostgreSQL, MySQL, Redis, Heroku Connect CI — Travis, CircleCI, GitLab CI Management — Basecamp, GitHub, JIRA, Redmine, Trello, YouTrack, Scrum Misc — Heroku, Salesforce, Linux, Bash, Docker, git Communications — mentoring, knowledge sharing, team work  Experience (ask for references) Software Engineer @ Thermondo GmbH [March 2016 — now] Developing backend monolithic (~150kloc) and microservice applications for company business processes.</description>
    </item>
    
  </channel>
</rss>